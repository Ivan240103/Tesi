services:

  database:
    container_name: iam-database
    image: mysql:latest
    environment:
      TZ: Europe/Rome
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: pwd
      MYSQL_USER: iam
      MYSQL_PASSWORD: pwd
      MYSQL_DATABASE: iam
      MYSQL_ROOT_HOST: "%"
    ports:
      - "3306:3306"
    restart: on-failure
    healthcheck:
      test:
        ["CMD", "mysql", "-u", "iam", "-ppwd", "--execute", "SHOW DATABASES;"]
      interval: 3s
      timeout: 5s
      retries: 5
    volumes:
      - iam-db:/var/lib/mysql

  dev:
    container_name: iam-dev
    build:
      context: .
      dockerfile: Dockerfile
    command: sleep infinity
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - .:/workspace
      - ./iam-dashboard/json-keystore.jwks:/keys/json-keystore.jwks:ro
    environment:
      NEXT_PUBLIC_BASE_PATH: /ui
      TZ: Europe/Rome
      IAM_PORT: 8080
      IAM_HOST: iam.test.example
      IAM_BASE_URL: http://iam.test.example:8080
      IAM_ISSUER: http://iam.test.example:8080
      IAM_KEY_STORE_LOCATION: file:/keys/json-keystore.jwks
      IAM_DB_PORT: 3306
      IAM_DB_USERNAME: iam
      IAM_DB_PASSWORD: pwd
      IAM_DB_HOST: database
      IAM_DATABASE_SHOW_SQL: false
      IAM_REGISTRATION_AUTHENTICATION_TYPE: oidc
      IAM_ACCESS_TOKEN_INCLUDE_SCOPE: true
      IAM_SCIM_INCLUDE_AUTHORITIES: true
      IAM_REGISTRATION_OIDC_ISSUER: ${REGISTRATION_OIDC_ISSUER:-https://example.org}
      IAM_ORGANISATION_NAME: cnafsd

  nginx:
    image: nginx:1.24.0
    container_name: iam-nginx
    restart: unless-stopped
    command: ["nginx-debug", "-g", "daemon off;"]
    depends_on:
      dev:
        condition: service_started
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf

volumes:
  iam-db:
